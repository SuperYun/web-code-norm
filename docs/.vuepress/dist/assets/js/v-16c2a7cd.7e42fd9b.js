"use strict";(self.webpackChunkweb_code_norm=self.webpackChunkweb_code_norm||[]).push([[337],{1555:(e,i,t)=>{t.r(i),t.d(i,{data:()=>a});const a={key:"v-16c2a7cd",path:"/commitRule.html",title:"代码commit 规范",lang:"en-US",frontmatter:{title:"代码commit 规范"},excerpt:"",headers:[{level:3,title:"为什么需要制定提交规范？",slug:"为什么需要制定提交规范",children:[]},{level:3,title:"我们的 git commit 提交规范",slug:"我们的-git-commit-提交规范",children:[]}],filePathRelative:"commitRule.md",git:{updatedTime:163487507e4,contributors:[{name:"superyun",email:"11297923@qq.com",commits:2}]}}},2957:(e,i,t)=>{t.r(i),t.d(i,{default:()=>l});const a=(0,t(6252).uE)('<h3 id="为什么需要制定提交规范" tabindex="-1"><a class="header-anchor" href="#为什么需要制定提交规范" aria-hidden="true">#</a> 为什么需要制定提交规范？</h3><p>在团队协作开发时，每个人提交代码时都会写 commit message。</p><p>每个人都有自己的书写风格，翻看我们组的git log, 可以说是五花八门，十分不利于阅读和维护。</p><p>因此，我们需要制定统一标准，促使团队形成一致的代码提交风格，更好的提高工作效率。</p><h3 id="我们的-git-commit-提交规范" tabindex="-1"><a class="header-anchor" href="#我们的-git-commit-提交规范" aria-hidden="true">#</a> 我们的 git commit 提交规范</h3><h4 id="格式" tabindex="-1"><a class="header-anchor" href="#格式" aria-hidden="true">#</a> 格式</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>type: description\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="_1-type-类型" tabindex="-1"><a class="header-anchor" href="#_1-type-类型" aria-hidden="true">#</a> 1. type 类型</h4><p>type 是 commit 的类别，只允许如下几种标识：</p><ul><li>fix: 修复bug</li><li>add: 新功能</li><li>update: 更新</li><li>style : 代码格式改变</li><li>test: 增加测试代码</li><li>revert: 撤销上一次的commit</li><li>build: 构建工具或构建过程等的变动，如：gulp 换成了 webpack，webpack 升级等</li><li></li></ul><h4 id="_2-description" tabindex="-1"><a class="header-anchor" href="#_2-description" aria-hidden="true">#</a> 2. description</h4><p>description 是对本次提交的简短描述。</p><p>不超过50个字符。</p><p>推荐以动词开头，如： 设置、修改、增加、删减、撤销等</p>',14),l={render:function(e,i){return a}}}}]);