"use strict";(self.webpackChunkweb_code_norm=self.webpackChunkweb_code_norm||[]).push([[509],{3095:(e,t,a)=>{a.r(t),a.d(t,{data:()=>r});const r={key:"v-8daa1a0e",path:"/",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"前端 JS 项目开发规范",slug:"前端-js-项目开发规范",children:[]}],filePathRelative:"README.md",git:{updatedTime:1631526937e3,contributors:[{name:"superyun",email:"11297923@qq.com",commits:1}]}}},44:(e,t,a)=>{a.r(t),a.d(t,{default:()=>l});var r=a(6252);const n=(0,r._)("h2",{id:"前端-js-项目开发规范",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#前端-js-项目开发规范","aria-hidden":"true"},"#"),(0,r.Uk)(" 前端 JS 项目开发规范")],-1),d=(0,r._)("p",null,"--- 现代软件架构的复杂性需要协同开发完成，如何高效地协同呢？无规矩不成方圆，无规范难以协同，比如，制订交通法规表面上是要限制行车权，实际上是保障公众的人身安全，试想如果没有限速，没有红绿灯，谁还敢上路行驶。对软件来说，适当的规范和标准绝不是消灭代码内容的创造性、优雅性，而是限制过度个性化，以一种普遍认可的统一方式一起做事，提升协作效率，降低沟通成本。代码的字里行间流淌的是软件系统的血液，质量的提升是尽可能少踩坑，杜绝踩重复的坑，切实提升系统稳定性，码出质量。",-1),l={render:function(e,t){return(0,r.wg)(),(0,r.iD)(r.HY,null,[n,d],64)}}}}]);