"use strict";(self.webpackChunkweb_code_norm=self.webpackChunkweb_code_norm||[]).push([[181],{703:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a={key:"v-09f548c8",path:"/namingRule.html",title:"命名规范",lang:"en-US",frontmatter:{title:"命名规范"},excerpt:"",headers:[],filePathRelative:"namingRule.md",git:{updatedTime:1631526937e3,contributors:[{name:"superyun",email:"11297923@qq.com",commits:1}]}}},177:(e,n,s)=>{s.r(n),s.d(n,{default:()=>r});const a=(0,s(252).uE)('<h4 id="项目命名" tabindex="-1"><a class="header-anchor" href="#项目命名" aria-hidden="true">#</a> 项目命名</h4><p>全部采用小写方式， 以中划线分隔。</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>正例：mall-management-system\n\n反例：mall_management-system / mallManagementSystem\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="目录命名" tabindex="-1"><a class="header-anchor" href="#目录命名" aria-hidden="true">#</a> 目录命名</h4><p>全部采用小写方式， 以中划线分隔，有复数结构时，要采用复数命名法， 缩写不用复数</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>正例： scripts / styles / components / images / utils / layouts / demo-styles / demo-scripts / img / doc\n\n反例： script / style / demo_scripts / demoStyles / imgs / docs\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>【特殊】VUE 的项目中的 components 中的组件目录，使用 kebab-case 命名</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>正例： head-search / page-loading / authorized / notice-icon\n\n反例： HeadSearch / PageLoading\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="js、css、scss、html、png-文件命名" tabindex="-1"><a class="header-anchor" href="#js、css、scss、html、png-文件命名" aria-hidden="true">#</a> JS、CSS、SCSS、HTML、PNG 文件命名</h4><p>全部采用小写方式， 以中划线分隔</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>正例： render-dom.js / signup.css / index.html / company-logo.png\n\n反例： renderDom.js / UserManagement.html\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="命名严谨性" tabindex="-1"><a class="header-anchor" href="#命名严谨性" aria-hidden="true">#</a> 命名严谨性</h4><p>代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。 说明：正确的英文拼写和语法可以让阅读者易于理解，避免歧义。注意，即使纯拼音命名方式也要避免采用</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>正例：henan / luoyang / rmb 等国际通用的名称，可视同英文。\n\n反例：DaZhePromotion [打折] / getPingfenByName() [评分] / int 某变量 = 3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="杜绝完全不规范的缩写-避免望文不知义" tabindex="-1"><a class="header-anchor" href="#杜绝完全不规范的缩写-避免望文不知义" aria-hidden="true">#</a> 杜绝完全不规范的缩写，避免望文不知义：</h4><p>反例：AbstractClass“缩写”命名成 AbsClass；condition“缩写”命名成 condi，此类随意缩写严重降低了代码的可阅读性。</p>',16),r={render:function(e,n){return a}}}}]);